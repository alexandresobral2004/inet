#
#  VideoStreaming
# 
#  It's an example of video streaming with Tcp, Udp protocols and the DASH techinique.
#  To do the video streaming with Tcp we developed the TcpBasicVideoStream and with the DASH we developed the 
#  TcpVideoStreamCliApp and both are in src/inet/applications/Tcpapp. 	
#  Created on 8 de dez de 2017 by Anderson Andrei da Silva & Patrick Menani Abrahão at University of São Paulo
#

[General]
tkenv-plugin-path = ../../../etc/plugins
network = Net
#-------------------------------------------------------------------------------------
#-----------------------------------------General-------------------------------------
#-------------------------------------------------------------------------------------
[Config Base-simulation]
## Ideal simulation time: 420s (7min) [For real simulations]
sim-time-limit = 90s
repeat = 10
*.numHosts = ${50,100,150}

*.host*.**.bitrate = 1Mbps
*.host*.wlan[0].radio.transmitter.communicationRange = 200m

# Visualizer
*.visualizer.physicalLinkVisualizer.displayLinks = true
*.visualizer.dataLinkVisualizer.displayLinks = true
*.visualizer.networkRouteVisualizer.displayRoutes = true
*.visualizer.*LinkVisualizer.lineShift = 0
*.visualizer.networkRouteVisualizer.lineShift = 0
*.visualizer.mobilityVisualizer.displayVelocities = true
*.visualizer.mobilityVisualizer.displayMovementTrails = true
*.visualizer.mediumVisualizer.displaySignals = false

# Wlan
*.host*.wlan[0].radio.receiver.ignoreInterference = true
*.hostA.wlan[0].radio.displayInterferenceRange = true
*.host*.wlan[0].typename = "WirelessNic"
*.host*.wlan[0].radioType = "IdealRadio"
*.host*.wlan[0].macType = "CsmaCaMac"
*.host*.wlan[0].mac.useAck = true
*.host*.wlan[0].radio.displayInterferenceRange = false
*.hostR*.wlan[0].radio.displayCommunicationRange = false

# Energy
*.host*.wlan[0].radio.energyConsumerType = "StateBasedEpEnergyConsumer"
*.host*.wlan[0].radio.energyConsumer.offPowerConsumption = 0mW
*.host*.wlan[0].radio.energyConsumer.sleepPowerConsumption = 1mW
*.host*.wlan[0].radio.energyConsumer.switchingPowerConsumption = 1mW
*.host*.wlan[0].radio.energyConsumer.receiverIdlePowerConsumption = 2mW
*.host*.wlan[0].radio.energyConsumer.receiverBusyPowerConsumption = 5mW
*.host*.wlan[0].radio.energyConsumer.receiverReceivingPowerConsumption = 10mW
*.host*.wlan[0].radio.energyConsumer.transmitterIdlePowerConsumption = 2mW
*.host*.wlan[0].radio.energyConsumer.transmitterTransmittingPowerConsumption = 100mW
*.host*.energyStorageType = "IdealEpEnergyStorage"

# Mobility
*.host*.mobilityType = "MassMobility"
**.host*.mobility.speed = ${normal(3mps, 0.5mps), normal(6mps, 0.5mps)}
**.host*.mobility.changeAngleBy = normal(0deg, 30deg)
**.host*.mobility.changeInterval = normal(5s, 0.1s)

**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMinY = 0m
**.mobility.constraintAreaMaxX = 1000m
**.mobility.constraintAreaMaxY = 700m

# AODV
#*.host*.forwarding = true
*.host*.routingTable.netmaskRoutes = ""
*.configurator.config = xml("<config><interface hosts='**' address='10.0.0.x' netmask='255.255.255.0'/><autoroute metric='errorRate'/></config>")
*.configurator.optimizeRoutes = false
*.configurator.addStaticRoutes = false
*.hostType = "AODVRouter"
*.hostB.wlan[0].radio.displayCommunicationRange = true
*.visualizer.dataLinkVisualizer.packetFilter = "AODV*"


#-------------------------------------------------------------------------------------
#------------------------------------------Udp----------------------------------------
#-------------------------------------------------------------------------------------

[Config WirelessUdp]
extends = Base-simulation

# Server
*.hostA.numUdpApps = 1
*.hostA.UdpApp[0].typename = "UdpVideoStreamSvr"
*.hostA.UdpApp[*].videoSize = 20MiB
*.hostA.UdpApp[*].sendInterval = 1s
*.hostA.UdpApp[*].packetLen = 60KiB
*.hostA.UdpApp[0].localPort = 5000

# Hosts
*.hostB.numUdpApps = 1
*.hostB.UdpApp[0].typename = "UdpVideoStreamCli"
*.hostB.UdpApp[0].serverAddress = "hostA"
*.hostB.UdpApp[0].startTime = 0s
*.hostB.UdpApp[0].serverPort = 5000

*.visualizer.networkRouteVisualizer.packetFilter = "UdpData*"

*.host*.**.bitrate = 10Mbps

#-------------------------------------------------------------------------------------
#------------------------------------------DASH---------------------------------------
#-------------------------------------------------------------------------------------
[Config WirelessDASH]
extends = Base-simulation
**.TcpType = "Tcp"

# Server
*.hostA.numTcpApps = 1
*.hostA.TcpApp[0].typename = "TcpGenericSrvApp"
*.hostA.TcpApp[0].localPort = 5001

# Host destino
*.hostB.numTcpApps = 1
*.hostB.TcpApp[0].typename = "TcpVideoStreamCliApp"
*.hostB.TcpApp[0].connectPort = 5001
*.hostB.TcpApp[0].connectAddress = "hostA"
*.hostB.TcpApp[0].dataTransferMode = "object"
*.hostB.TcpApp[0].numRequestsPerSession = 1000
*.hostB.TcpApp[0].idleInterval = 0s
*.hostB.TcpApp[0].startTime = 0s
*.hostB.TcpApp[0].video_duration = 1000
*.hostB.TcpApp[0].thinkTime = 0s

*.host*.**.bitrate = 10Mbps

#--------------------------------------------------------------------------------------
# Visualizer
*.visualizer.physicalLinkVisualizer.packetFilter = "TcpData*"
*.visualizer.networkRouteVisualizer.packetFilter = "TcpData*"

#-------------------------------------------------------------------------------------
#------------------------------------------Tcp----------------------------------------
#-------------------------------------------------------------------------------------
[Config WirelessTcp]
extends = Base-simulation
**.TcpType = "Tcp"

# Server
*.hostA.numTcpApps = 1
*.hostA.TcpApp[0].typename = "TcpGenericSrvApp"
*.hostA.TcpApp[0].localPort = 5001

# Host destino
*.hostB.numTcpApps = 1
#*.hostB.TcpApp[0].typename = "TcpBasicVideoStreamCliApp"
*.hostB.TcpApp[0].typename = "TcpVideoStreamCliApp"
*.hostB.TcpApp[0].connectAddress = "hostA"
*.hostB.TcpApp[0].dataTransferMode = "object"
*.hostB.TcpApp[0].video_current_quality_index = 0
*.hostB.TcpApp[0].idleInterval = 0s
*.hostB.TcpApp[0].thinkTime = 0s
*.hostB.TcpApp[0].stopTime = 1000s
*.hostB.TcpApp[0].numRequestsPerSession = 1000
*.hostB.TcpApp[0].video_duration = 1000

*.hostB.TcpApp[0].connectPort = 5001

*.host*.**.bitrate = 10Mbps

#--------------------------------------------------------------------------------------
# Visualizer
*.visualizer.physicalLinkVisualizer.packetFilter = "TcpData*"
*.visualizer.networkRouteVisualizer.packetFilter = "TcpData*"
